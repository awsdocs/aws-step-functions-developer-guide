# Manage a Crawler Job \(Amazon Glue, Amazon SNS\)<a name="sample-project-crawler-job-notification"></a>

This sample project demonstrates how to run an AWS Glue Job, and then send an Amazon SNS notification based on whether that job succeeds or fails\. Deploying this sample project will create a Step Functions state machine, invoking a pre existent AWS Glue Job, and an Amazon SNS topic\. 

In this project, Step Functions uses a state machine to call the AWS Glue Job synchronously using the [startJobRun](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html#aws-glue-api-jobs-runs-StartJobRun)\. It then waits for the Job to succeed or fail, and it sends an Amazon SNS topic with a message about whether the job succeeded or failed\.

**To create the Run a crawler job state machine and provision all resources**

1. Open the [Step Functions console](https://console.aws.amazon.com/states/home?region=us-east-1#/) and choose **Create a state machine**\.

1. Choose **Author with code Snippet**, and name it as **RunCrawlerJob**\.

   From the Generate code Snippet you can select Glue Job or use the sample provided below\. If you decide to use the sample, ensure that you have an SNS Topic previously created.

1. Choose **Next**\.

   The **Configure Settings** page is displayed, requesting for an IAM Role that will be used by Step Function\. For this sample project, ensure that you already have an AWS Glue Job and an SNS Topic 

1. Choose **Create State Machione**\.
**Note**  
It can take up to one minute to create the IAM permissions to be created\. 

## To start a new execution<a name="sample-crawler-start-execution"></a>

1. On the **New execution** page, enter an execution name \(optional\), and then choose **Start Execution**\.

1. \(Optional\) To help identify your execution, you can specify an ID for it in the **Enter an execution name** box\. If you don't enter an ID, Step Functions generates a unique ID automatically\.
**Note**  
Step Functions allows you to create state machine, execution, and activity names that contain non\-ASCII characters\. These non\-ASCII names don't work with Amazon CloudWatch\. To ensure that you can track CloudWatch metrics, choose a name that uses only ASCII characters\.

1. Optionally, you can go to the newly created state machine on the Step Functions **Dashboard**, and then choose **New execution**\.

1. When an execution is complete, you can select states on the **Visual workflow** and browse the **Input** and **Output** under **Step details**\.

## Example State Machine Code<a name="sample-crawler-code-examples"></a>

The state machine in this sample project integrates with AWS Glue and Amazon SNS by passing parameters directly to those resources\. Browse through this example state machine to see how Step Functions uses a state machine to call the Glue Job synchronously, waits for the job to succeed or fail, and sends an Amazon SNS topic with a message about whether the job succeeded or failed\.

For more information about how AWS Step Functions can control other AWS services, see [AWS Service Integrations](concepts-service-integrations.md)\.

```
{
  "Comment": "An example of the Amazon States Language for notification on an AWS Glue Job completion",
  "StartAt": "RunGlueJob",
  "TimeoutSeconds": 3600,
  "States": {
    "RunGlueJob":{
       "Type":"Task",
       "Resource":"arn:aws:states:::glue:startJobRun.sync",
       "Parameters":{
          "JobName":"$.JobName",
          "Arguments":{
             "key":"$.value"
          }
       },
       "Next":"Notify Success",
       "Catch":[
          {
             "ErrorEquals":[
                "States.ALL"
             ],
             "Next":"Notify Failure"
          }
       ]
    },
    "Notify Success": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": "AWS GlueJob started by Step Functions succeeded",
        "TopicArn": "arn:aws:sns:us-east-1:123456789012:GlueJobNotification-SNSTopic"
      },
      "End": true
    },
    "Notify Failure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": "AWS GlueJob started by Step Functions failed",
        "TopicArn": "arn:aws:sns:ap-northeast-1:123456789012:GlueJobNotification-SNSTopic"
      },
      "End": true
    }
  }
}
```

## IAM Example<a name="sample-crawler-iam-example"></a>

This example AWS Identity and Access Management \(IAM\) policy generated by the sample project includes the least privilege necessary to execute the state machine and related resources\. It's a best practice to include only those permissions that are necessary in your IAM policies\. 

```
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "sns:Publish"
            ],
            "Resource": [
                "arn:aws:sns:us-east-1:123456789012:GlueJobNotification-SNSTopic"
            ],
            "Effect": "Allow"
        },
        {
            "Action": [
                "glue:StartJobRun",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:BatchStopJobRun"
            ],
            "Effect": "Allow",
            "Resource": [
                "*"
            ]
        }
    ]
}
```

For information about how to configure IAM when using Step Functions with other AWS services, see [IAM Policies for Integrated Services](service-integration-iam-templates.md)\.
